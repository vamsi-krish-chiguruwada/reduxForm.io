{"version":3,"sources":["redux/reduxForm.js","Components/empForm/form.js","Components/empTable/empTable.js","App.js","reportWebVitals.js","index.js"],"names":["submitDetails","per","type","payload","initialState","employees","store","createStore","state","action","Form","className","onSubmit","this","props","handleSubmit","required","onChange","setNameValue","value","name","placeholder","setEmpidValue","empId","setAgeValue","age","React","Component","EmployeeTable","console","log","getState","map","obj","App","event","temp","target","setState","preventDefault","dispatch","alert","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11394e5d.chunk.js","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst SUBMIT_NAME = \"SUBMIT_NAME\";\r\n\r\nexport const submitDetails = (per) => {\r\n  return {\r\n    type: SUBMIT_NAME,\r\n    payload: per,\r\n  };\r\n};\r\n\r\nconst initialState = {\r\n  employees: [\r\n    \r\n  ],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SUBMIT_NAME\":\r\n      return {\r\n\r\n        employees: [...state.employees, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport \"./form.css\";\r\nclass Form extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <h1>fill employee details</h1>\r\n        {/* <h1>{store.getState().inputName}</h1> */}\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            onChange={this.props.setNameValue}\r\n            value={this.props.state.name}\r\n            placeholder=\"Name\"\r\n          />\r\n\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            onChange={this.props.setEmpidValue}\r\n            value={this.props.state.empId}\r\n            placeholder=\"employee Id\"\r\n          />\r\n\r\n          <input\r\n            required\r\n            type=\"number\"\r\n            onChange={this.props.setAgeValue}\r\n            value={this.props.state.age}\r\n            placeholder=\"age\"\r\n          />\r\n\r\n          <input className = \"formSubmit\" type=\"submit\" value=\"submit\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React from \"react\";\r\n// import store from \"../../redux/reduxForm\";\r\nimport \"./empTable.css\"\r\n\r\nclass EmployeeTable extends React.Component {\r\n//   state = {\r\n//     employees: [],\r\n//   };\r\n//   componentDidMount() {\r\n//     this.unsubscribe = store.subscribe(() => {\r\n//       this.setState({ employees: this.props.store.getState().employees });\r\n//     //   console.log(this.props.store.getState().employees);\r\n//     });\r\n//   }\r\n//   componentWillReceiveProps(){\r\n//     this.unsubscribe = store.subscribe(() => {\r\n//         this.setState({ employees: this.props.store.getState().employees });\r\n//         // console.log(this.props.store.getState().employees);\r\n//       });\r\n//   }\r\n//   componentWillUnmount() {\r\n//     this.unsubscribe();\r\n//   }\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"tableContainer\">\r\n          {console.log(this.props.store.getState())}\r\n        <table>\r\n          <tr>\r\n            <th>name</th>\r\n            <th>employee id</th>\r\n            <th>age</th>\r\n          </tr>\r\n\r\n          {this.props.store.getState().employees.map((obj) => (\r\n            <tr key={obj.empId}>\r\n              <td>{obj.name}</td>\r\n              <td>{obj.empId}</td>\r\n              <td>{obj.age}</td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport store from \"./redux/reduxForm\";\nimport { submitDetails } from \"./redux/reduxForm\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Form from \"./Components/empForm/form\";\nimport EmpTable from \"./Components/empTable/empTable\";\n// store.subscribe(() => {\n//   console.log(\"sub\", store.getState());\n// });\n\nclass App extends React.Component {\n  state = {\n    name: \"\",\n    empId: \"\",\n    age: \"\",\n  };\n\n  setNameValue = (event) => {\n    let temp = { ...this.state };\n    // console.log(temp);\n    temp.name = event.target.value;\n    this.setState(temp);\n  };\n  setEmpidValue = (event) => {\n    let temp = { ...this.state };\n    temp.empId = event.target.value;\n    this.setState(temp);\n  };\n  setAgeValue = (event) => {\n    let temp = { ...this.state };\n    temp.age = event.target.value;\n    this.setState(temp);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    store.dispatch(submitDetails(this.state));\n    this.setState({\n      name: \"\",\n      empId: \"\",\n      age: \"\",\n    });\n    alert(\"submited successfully\")\n  };\n\n  render() {\n    // return (\n    //   <div className=\"App\">\n    //     <EmpTable store={store} />\n\n    //     <Form\n    //       state={this.state}\n    //       setNameValue={this.setNameValue}\n    //       setEmpidValue={this.setEmpidValue}\n    //       setAgeValue={this.setAgeValue}\n    //       handleSubmit={this.handleSubmit}\n    //     />\n    //   </div>\n    // );\n    return (\n      <Router>\n        <div className=\"App\">\n          <nav>\n          <Link to=\"/\"><button>home</button></Link>\n\n            <Link to=\"/table\"><button>table</button></Link>\n          </nav>\n          <Switch>\n            <Route path=\"/table\">\n              <EmpTable store={store} />\n            </Route>\n\n            <Route path=\"/\">\n              <Form\n                state={this.state}\n                setNameValue={this.setNameValue}\n                setEmpidValue={this.setEmpidValue}\n                setAgeValue={this.setAgeValue}\n                handleSubmit={this.handleSubmit}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}